general:
  buildTool: 'mta'
  productiveBranch: 'main'
  pipelineOptimization: true
  gitHttpsCredentialsId: 'cfdeploy'
  # vaultAppRoleTokenCredentialsId: 'vault-approle-role-id-1741-8994'
  # vaultAppRoleSecretTokenCredentialsId: 'vault-approle-secret-id-accessor-1741-8994'
  # vaultBasePath: 'piper/PIPELINE-GROUP-1741'
  # vaultPipelineName: 'PIPELINE-8994'
  # vaultServerUrl: 'https://vault.tools.sap'
  vaultNamespace: 'ies/hyperspace/pipelines'
stages:
  Central Build:
    sapXmakeExecuteBuild: true
    sonarExecuteScan: false
    npmExecuteLint: false
    karmaExecuteTests: false
    testsPublishResults: false
  Acceptance:
    cloudFoundry:
      credentialsId: 'cfdeploy'
      apiEndpoint: 'https://api.cf.us10-001.hana.ondemand.com'
      org: 'SAP_<MyProject>'
      space: '<My Project>-<dev>'
      # mtaExtensionDescriptor: './mta-extensions/dev-mtaext.yaml'
    # deployTool: 'mtaDeployPlugin'
    testServerUrl: 'https://api.cf.us10-001.hana.ondemand.com'
    mtaDeployParameters: '--version-rule ALL -f'
  # Performance:
  #   cfApiEndpoint: https://api.cf.eu10.hana.ondemand.com
  #   cfOrg: sap-learning-qa
  #   cfSpace: test.com.sap.learning.builder
  #   cfManifest: manifest.yaml
  #   testServerUrl:  https://api.cf.eu10.hana.ondemand.com
  #   cfCredentialsId: 'hyperspace-scpcf-dl_5e01a0e6eab84c02946fdb17@global.corp.sap'
  Release:
    cfApiEndpoint: https://api.cf.us10-001.hana.ondemand.com
    cfOrg: SAP_<MyProject>
    cfSpace: SAP_<MyProject>
    cfManifest: manifest.yaml
    testServerUrl:  https://api.cf.us10-001.hana.ondemand.com
    cfCredentialsId: 'cfdeploy'
steps:
  mtaBuild:
    mtaBuildTool: cloudMbt
  executeBuild:
    jobNamePattern: 'Procurement'
    xMakeNovaCredentialsId: 'hyperspace-xmake-c5316007'
  # whitesourceExecuteScan:
  #   whitesourceProductName: 'SHC - COM-SAP-LEARNING-BUILDER-EXPERIENCE'
  #   whitesourceProductToken: '2223efe18c8949c5bf3653debc2280c0c389cdcb8f1c495f956a1dc0a86a60c7'
  #   stashContent:
  #   - buildDescriptor
  #   - opensourceConfiguration
  #   - classFiles
  #   - tests
  #   whitesourceUserTokenCredentialsId: 'hyperspace-whitesource-com-sap-learning-builder-experience'
  # sonarExecuteScan:
  #   serverUrl: 'https://sonar.wdf.sap.corp'
  #   sonarTokenCredentialsId: 'hyperspace-sonar-i308033'
  #   instance: 'SAP SonarQube Enterprise'
  #   projectKey: 'com.sap.learning.builder.experience'
  # checkmarxExecuteScan:
  #   projectName: 'com-sap-learning-builder-experience'
  #   teamName: '/CxServer/SP/SAP/INTERNAL/LEARNING_EXPERIENCE'
  #   preset: 'SAP_Default_TypeScript_JavaScript' #default preset
  # sapCumulusUpload:
  #   pipelineId: '43502c07-8c05-49d0-b79a-c6ee88b1ffc4'
  #   cumulusFileCredentialsId: 'hyperspace-cumulusupload-1741'
  downloadArtifactsFromNexus:
    disableLegacyNaming: true
    artifactType: 'mta'
    #group: 'com.sap.ibx'
    verbose: true
    buildTool: 'mta'
    fromStaging: true
    #nexusUrl: 'https://nexus.wdf.sap.corp:8443'  











# general:
#   buildTool: 'maven'
# steps:
#   cloudFoundryDeploy:
#     deployTool: 'mta'
#     cloudFoundry:
#       org: 'SAP_<MyProject>'
#       space: '<My Project>-<dev>'
#       credentialsId: 'cfdeploy'
#   newmanExecute:
#     newmanCollection: 'myNewmanCollection.file'
#     newmanEnvironment: 'myNewmanEnvironment'
#     newmanGlobals: 'myNewmanGlobals'




# general:
#   buildTool: "mta"
# service:
#   buildToolVersion: "MBTJ8N14"
# stages:
#   Build:
#     npmExecuteLint: false
#   Additional Unit Tests:
#     npmExecuteScripts: false
#     karmaExecuteTests: false
#   Malware Scan:
#     malwareExecuteScan: true
#   Acceptance:
#     cloudFoundryDeploy: true
#     cfApiEndpoint: "https://api.cf.us10-001.hana.ondemand.com"
#     cfOrg: "SAP_<MyProject>"
#     cfSpace: "<My Project>-<dev>"
#     cfCredentialsId: "cfdeploy"
#     npmExecuteEndToEndTests: false
#   Compliance:
#     sonarExecuteScan: false
#   Release:
#     cloudFoundryDeploy: true
#     cfApiEndpoint: "https://api.cf.us10-001.hana.ondemand.com"
#     cfOrg: "SAP_<MyProject>"
#     cfSpace: "<My Project>-<dev>"
#     cfCredentialsId: "cfdeploy"
#     tmsUpload: false
# steps:
#   artifactPrepareVersion:
#     versioningType: "cloud_noTag"
#   cloudFoundryDeploy:
#     mtaDeployParameters: "-f --version-rule ALL"





# general:
#   gitSshKeyCredentialsId: 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

# steps:
#   cloudFoundryDeploy:
#     deployTool: 'mta'
#     cloudFoundry:
#       org: 'SAP_<MyProject>'
#       space: '<My Project>-<dev>'
#       credentialsId: 'cfdeploy'

# hooks:
#   splunk:
#     dsn: 'YOUR SPLUNK HEC ENDPOINT'
#     token: 'YOURTOKEN'
#     index: 'SPLUNK INDEX'
#     sendLogs: true




